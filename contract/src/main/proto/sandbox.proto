syntax = "proto3";

package tinkoff.public.invest.api.contract.v1;

option go_package = "Tinkoff/investAPI";
option java_package = "ru.tinkoff.piapi.contract.v1";
option java_multiple_files = true;
option csharp_namespace = "Tinkoff.InvestAPI.V1";
option objc_class_prefix = "TIAPI";
option php_namespace = "Tinkoff\\Invest\\V1";

import "google/protobuf/timestamp.proto";
import "common.proto";
import "orders.proto";
import "operations.proto";
import "users.proto";

service SandboxService { //Сервис для работы с песочницей Public API
  rpc OpenSandboxAccount(OpenSandboxAccountRequest) returns (OpenSandboxAccountResponse); //Метод регистрации счёта в песочнице
  rpc GetSandboxAccounts(GetAccountsRequest) returns (GetAccountsResponse); //Метод получения счетов в песочнице
  rpc CloseSandboxAccount(CloseSandboxAccountRequest) returns (CloseSandboxAccountResponse); //Метод закрытия счёта в песочнице

  rpc PostSandboxOrder(PostOrderRequest) returns (PostOrderResponse); //Метод выставления торгового поручения в песочнице
  rpc GetSandboxOrders(GetOrdersRequest) returns (GetOrdersResponse); //Метод получения списка активных заявок по счёту в песочнице
  rpc CancelSandboxOrder(CancelOrderRequest) returns (CancelOrderResponse); //Метод отмены торгового поручения в песочнице
  rpc GetSandboxOrderState(GetOrderStateRequest) returns (OrderState); //Метод получения статуса заявки в песочнице

  rpc GetSandboxPositions(PositionsRequest) returns (PositionsResponse); //Метод получения позиций по виртуальному счёту песочницы
  rpc GetSandboxOperations(OperationsRequest) returns (OperationsResponse); //Метод получения операций в песочнице по номеру счёта
  rpc GetSandboxPortfolio(PortfolioRequest) returns (PortfolioResponse); //Метод получения портфолио в песочнице

  rpc SandboxPayIn(SandboxPayInRequest) returns (SandboxPayInResponse); //Метод пополнения счёта в песочнице
}

message OpenSandboxAccountRequest {
  //пустой запрос
}

message OpenSandboxAccountResponse {
  string account_id = 1; //Номер счёта
}

message CloseSandboxAccountRequest {
  string account_id = 1; //Номер счёта
}

message CloseSandboxAccountResponse {
  //пустой ответ
}

message SandboxPayInRequest {
  string account_id = 1; //Номер счёта
  MoneyValue amount = 2; //Сумма пополнения счёта в рублях
}

message SandboxPayInResponse {
  MoneyValue balance = 1; //Текущий баланс счёта
}
